openapi: 3.0.1
paths:
  /vehicles/create:
    post:
      tags:
      - Vehicle
      - Vehicles
      operationId: createVehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        "201":
          description: createVehicle 201 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
  /vehicles/list:
    get:
      tags:
      - Vehicle
      - Vehicles
      operationId: listVehicles
      responses:
        "200":
          description: listVehicles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
  /vehicles/{id}:
    get:
      tags:
      - Vehicle
      - Vehicles
      operationId: getVehicle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getVehicle 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
    delete:
      tags:
      - Vehicle
      - Vehicles
      operationId: deleteVehicle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: deleteVehicle 204 response
components:
  schemas:
    Vehicle:
      type: object
      properties:
        brand:
          type: string
        color:
          type: string
        description:
          type: string
        manufactureYear:
          type: string
        model:
          type: string
